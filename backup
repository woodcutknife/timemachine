#!/bin/bash

# settings
CONFIG_FILE="backup.conf"
[ -f "$CONFIG_FILE" ] && source "$CONFIG_FILE"

# date for this backup
date=`date "+%Y-%m-%dT%H_%M_%S"`

# check and create lockfile
[ -d "$TARGET" ] || mkdir "$TARGET"
if [ -f "$TARGET/lockfile" ]; then
    echo "Lockfile exists, backup stopped."
    exit 2
else
    touch "$TARGET/lockfile"
fi

# rsync
backups=(${BACKUP//$DELIMITER/ })
for backup in ${backups[@]}
do
    backup_hash=`echo -n $backup | md5sum | cut -d' ' -f1`

    # create folders if necessary
    [ -d "$TARGET/$backup_hash" ] || mkdir "$TARGET/$backup_hash"
    [ -d "$TARGET/$backup_hash/current" ] || mkdir "$TARGET/$backup_hash/current"

    rsync \
        --archive \
        --xattrs \
        --human-readable \
        --delete \
        --progress \
        --link-dest="$TARGET/$backup_hash/current" \
        "$backup" \
        "$TARGET/$backup_hash/$date-incomplete/"

    # backup complete
    mv "$TARGET/$backup_hash/$date-incomplete" "$TARGET/$backup_hash/$date"
    rm -r "$TARGET/$backup_hash/current"
    ln -s "$TARGET/$backup_hash/$date" "$TARGET/$backup_hash/current"
    touch "$TARGET/$backup_hash/$date"

    # delete old backups
    backup_cnt=`find "$TARGET/$backup_hash" -maxdepth 1 -mindepth 1 -type d | wc -l`
    if [ $backup_cnt -gt $BACKUP_UPPER_LIMIT ]; then
        delete_cnt=$(($backup_cnt - $BACKUP_UPPER_LIMIT))
        find "$TARGET/$backup_hash" -maxdepth 1 -mindepth 1 -type d | sort | head -${delete_cnt} | xargs rm -rf
    fi
done

# show backup status
for backup in ${backups[@]}
do
    backup_hash=`echo -n $backup | md5sum | cut -d' ' -f1`
    backup_cnt=`find "$TARGET/$backup_hash" -maxdepth 1 -mindepth 1 -type d | wc -l`

    echo "===================================================="
    echo "BACKUP: $backup"
    echo "COUNT: $backup_cnt"
    echo "VERSIONS:"
    find "$TARGET/$backup_hash" -maxdepth 1 -mindepth 1 -type d | sort -r | xargs -I '{}' basename '{}'
    echo "===================================================="
done

# remove lockfile
rm "$TARGET/lockfile"
